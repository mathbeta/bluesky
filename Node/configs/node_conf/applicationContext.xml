<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:property-placeholder location="classpath*:jdbc.properties" />

	<!-- proxool连接池 -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="driverUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="alias" value="Pool_dbname" />
		<property name="maximumActiveTime" value="600000" />
		<property name="prototypeCount" value="0" />
		<property name="maximumConnectionCount" value="50" />
		<property name="minimumConnectionCount" value="2" />
		<property name="simultaneousBuildThrottle" value="50" />
		<property name="houseKeepingTestSql" value="select CURRENT_DATE" />
	</bean>

	<!-- mybatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:${jdbc.configLocation}" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionmanager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 方法事务参数 -->
	<tx:advice id="serviceAdvice" transaction-manager="transactionmanager">
		<tx:attributes>
			<tx:method name="updateAppScalableStatus" propagation="REQUIRES_NEW"
				isolation="READ_UNCOMMITTED" rollback-for="Exception" />
			<tx:method name="updateDefaultProtocol" propagation="REQUIRES_NEW"
				isolation="READ_UNCOMMITTED" rollback-for="Exception" />
			<tx:method name="saveProtocol" propagation="REQUIRES_NEW"
				isolation="READ_UNCOMMITTED" rollback-for="Exception" />
			<tx:method name="saveNewNode" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="run*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="saveUpgrade" propagation="SUPPORTS"
				isolation="READ_COMMITTED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="start*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="stop*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="destroy*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="deploy*" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Exception" />
			<tx:method name="reapply" propagation="REQUIRED" isolation="READ_COMMITTED"
				rollback-for="Exception" />
			<tx:method name="redeploy*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="isolate*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="return*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="unisolate*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置切面 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="servicePointcut"
			expression="execution(* com.dc.appengine.storage.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice" />
	</aop:config>

	<context:component-scan
		base-package="com.dc.appengine.storage.service.impl,
		com.dc.appengine.storage.dao.impl" />

</beans>